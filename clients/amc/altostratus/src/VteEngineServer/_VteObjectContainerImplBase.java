/* * File: ./VTEENGINESERVER/_VTEOBJECTCONTAINERIMPLBASE.JAVA * From: VTEENGINESERVER.IDL * Date: Wed Feb 14 12:54:06 2001 *   By: C:\ALTOST~1\IDL\IDLTOJ~1.EXE Java IDL 1.2 Aug 18 1998 16:25:34 */package VteEngineServer;public abstract class _VteObjectContainerImplBase extends org.omg.CORBA.DynamicImplementation implements VteEngineServer.VteObjectContainer {    // Constructor    public _VteObjectContainerImplBase() {         super();    }    // Type strings for this class and its superclases    private static final String _type_ids[] = {        "IDL:VteEngineServer/VteObjectContainer:1.0",        "IDL:ObserveM/RegisterDef:1.0"    };    public String[] _ids() { return (String[]) _type_ids.clone(); }    private static java.util.Dictionary _methods = new java.util.Hashtable();    static {      _methods.put("subscribe", new java.lang.Integer(0));      _methods.put("Catalog", new java.lang.Integer(1));      _methods.put("setInterval", new java.lang.Integer(2));      _methods.put("getObject", new java.lang.Integer(3));     }    // DSI Dispatch call    public void invoke(org.omg.CORBA.ServerRequest r) {       switch (((java.lang.Integer) _methods.get(r.op_name())).intValue()) {           case 0: // ObserveM.RegisterDef.subscribe              {              org.omg.CORBA.NVList _list = _orb().create_list(0);              org.omg.CORBA.Any _callback = _orb().create_any();              _callback.type(ObserveM.CallbackObjDefHelper.type());              _list.add_value("callback", _callback, org.omg.CORBA.ARG_IN.value);              org.omg.CORBA.Any _observerTypes = _orb().create_any();              _observerTypes.type(ObserveM.StatusBitListHelper.type());              _list.add_value("observerTypes", _observerTypes, org.omg.CORBA.ARG_IN.value);              r.params(_list);              ObserveM.CallbackObjDef callback;              callback = ObserveM.CallbackObjDefHelper.extract(_callback);              short[] observerTypes;              observerTypes = ObserveM.StatusBitListHelper.extract(_observerTypes);              try {                            this.subscribe(callback, observerTypes);              }              catch (ObserveM.BadObserveTypeException e0) {                            org.omg.CORBA.Any _except = _orb().create_any();                            ObserveM.BadObserveTypeExceptionHelper.insert(_except, e0);                            r.except(_except);                            return;              }              org.omg.CORBA.Any __return = _orb().create_any();              __return.type(_orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_void));              r.result(__return);              }              break;           case 1: // VteEngineServer.VteObjectContainer.Catalog              {              org.omg.CORBA.NVList _list = _orb().create_list(0);              org.omg.CORBA.Any _block = _orb().create_any();              _block.type(org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_string));              _list.add_value("block", _block, org.omg.CORBA.ARG_IN.value);              org.omg.CORBA.Any _depth = _orb().create_any();              _depth.type(org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_long));              _list.add_value("depth", _depth, org.omg.CORBA.ARG_IN.value);              r.params(_list);              String block;              block = _block.extract_string();              int depth;              depth = _depth.extract_long();              String[] ___result;                            ___result = this.Catalog(block, depth);              org.omg.CORBA.Any __result = _orb().create_any();              VteEngineServer.stringListHelper.insert(__result, ___result);              r.result(__result);              }              break;           case 2: // VteEngineServer.VteObjectContainer.setInterval              {              org.omg.CORBA.NVList _list = _orb().create_list(0);              org.omg.CORBA.Any _newInterval = _orb().create_any();              _newInterval.type(org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_double));              _list.add_value("newInterval", _newInterval, org.omg.CORBA.ARG_IN.value);              r.params(_list);              double newInterval;              newInterval = _newInterval.extract_double();              double ___result;                            ___result = this.setInterval(newInterval);              org.omg.CORBA.Any __result = _orb().create_any();              __result.insert_double(___result);              r.result(__result);              }              break;           case 3: // VteEngineServer.VteObjectContainer.getObject              {              org.omg.CORBA.NVList _list = _orb().create_list(0);              org.omg.CORBA.Any _parameterName = _orb().create_any();              _parameterName.type(org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_string));              _list.add_value("parameterName", _parameterName, org.omg.CORBA.ARG_IN.value);              r.params(_list);              String parameterName;              parameterName = _parameterName.extract_string();              ParameterM.ParameterDef ___result;                            ___result = this.getObject(parameterName);              org.omg.CORBA.Any __result = _orb().create_any();              ParameterM.ParameterDefHelper.insert(__result, ___result);              r.result(__result);              }              break;            default:              throw new org.omg.CORBA.BAD_OPERATION(0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);       } }}